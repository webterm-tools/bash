/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/sed-lite/lib/sed-lite.js":
/*!***********************************************!*\
  !*** ./node_modules/sed-lite/lib/sed-lite.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// sed-lite.ts\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.sed = void 0;\n/**\n * @param {string} str \"s/match/replace/flag\"\n * @returns {Function} (str => str.replace(/match/flag, \"replace\")\n * @throws {SyntaxError}\n */\nfunction sed(str) {\n    let replacer;\n    if (\"string\" !== typeof str)\n        str = String(str);\n    // leading spaces and comments\n    str = str.replace(/^(\\s+|;|#[^\\r\\n]*([\\r\\n]+|$))*/g, \"\");\n    // empty\n    if (!str)\n        return;\n    const delim = str[1] || \"/\";\n    const delimRE = delim.replace(/([^\\w\\/#:])/, \"\\\\$1\");\n    const fieldRE = \"((?:\\\\\\\\.|[^\\\\\\\\\\\\\\\\\" + delimRE + \"])*)\"; // means /\\\\./ or /[^\\\\]/\n    const matchRE = \"^s\" + delimRE + fieldRE + delimRE + fieldRE + delimRE + \"([^;#\\\\s]*)\";\n    str = str.replace(new RegExp(matchRE), (substring, $1, $2, $3) => {\n        const regexp = new RegExp($1, $3);\n        const replace = unescape($2);\n        replacer = str => str.replace(regexp, replace);\n        return \"\";\n    });\n    // invalid line\n    if (!replacer) {\n        throw new SyntaxError(\"Invalid: \" + str);\n    }\n    // trailing spaces and comments\n    str = str.replace(/^(\\s+|#[^\\r\\n]*([\\r\\n]+|$))*/g, \"\");\n    // combine next line\n    if (str) {\n        if (str[0] !== \";\") {\n            throw new SyntaxError(\"Add ';' before: \" + str);\n        }\n        const next = sed(str);\n        if (next)\n            replacer = JOIN(replacer, next);\n    }\n    // done\n    return replacer;\n}\nexports.sed = sed;\n/**\n * @private\n */\nfunction JOIN(A, B) {\n    return str => B(A(str));\n}\nconst esc = { b: \"\\b\", f: \"\\f\", n: \"\\n\", r: \"\\r\", t: \"\\t\", v: \"\\v\" };\nfunction unescape(str) {\n    return str.replace(/\\\\(x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|.)/g, (match, $1) => {\n        if (match.length > 2)\n            return String.fromCharCode(parseInt(match.substr(2), 16));\n        return esc[$1] || $1;\n    });\n}\n\n\n//# sourceURL=webpack://@webterm-tools/bash/./node_modules/sed-lite/lib/sed-lite.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./node_modules/sed-lite/lib/sed-lite.js"](0, __webpack_exports__);
/******/ 	module.exports = __webpack_exports__;
/******/ 	
/******/ })()
;